{"version":3,"sources":["../../../src/hooks/useDragDropManager.ts","../../../src/hooks/useIsomorphicLayoutEffect.ts","../../../src/hooks/useOptionalFactory.ts","../../src/index.ts","../../../src/internals/wrapConnectorHooks.ts","../../../src/internals/isRef.ts","../../../src/hooks/useMonitorOutput.ts","../../../src/hooks/useCollector.ts","../../../src/hooks/useCollectedProps.ts","../node_modules/fast-deep-equal/index.js","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","../../../src/internals/registration.ts","../../../../src/hooks/useDrag/connectors.ts","../../../src/internals/SourceConnector.ts","../../../src/internals/DragSourceMonitorImpl.ts","../../../../src/hooks/useDrag/DragSourceImpl.ts","../../../../src/hooks/useDrag/useRegisteredDragSource.ts","../../../../src/hooks/useDrag/useDragSource.ts","../../../../src/hooks/useDrag/useDragType.ts","../../../../src/hooks/useDrag/useDrag.ts","../../../../src/hooks/useDrag/useDragSourceMonitor.ts","../../../../src/hooks/useDrag/useDragSourceConnector.ts","../../../../src/hooks/useDrop/connectors.ts","../../../src/internals/TargetConnector.ts","../../../src/internals/DropTargetMonitorImpl.ts","../../../../src/hooks/useDrop/DropTargetImpl.ts","../../../../src/hooks/useDrop/useRegisteredDropTarget.ts","../../../../src/hooks/useDrop/useDropTarget.ts","../../../../src/hooks/useDrop/useAccept.ts","../../../../src/hooks/useDrop/useDrop.ts","../../../../src/hooks/useDrop/useDropTargetMonitor.ts","../../../../src/hooks/useDrop/useDropTargetConnector.ts"],"names":["useDragDropManager","dragDropManager","useContext","DndContext","invariant","useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","useOptionalFactory","arg","deps","memoDeps","push","useMemo","shallowEqual","objA","objB","compare","compareContext","compareResult","call","keysA","Object","keys","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","key","valueA","valueB","wrapHookToRecognizeElement","hook","elementOrNode","options","isValidElement","node","element","type","displayName","name","Error","throwIfCompositeComponentElement","newRef","previousRef","ref","cloneElement","setRef","cloneWithRef","wrapConnectorHooks","hooks","wrappedHooks","forEach","endsWith","wrappedHook","current","isRef","obj","useMonitorOutput","monitor","collect","onCollect","collected","updateCollected","onUpdate","setCollected","useState","useCallback","nextValue","equal","useCollector","handlerId","getHandlerId","subscribeToStateChange","handlerIds","useCollectedProps","collector","connector","reconnect","module","exports","a","b","constructor","i","Array","isArray","RegExp","source","flags","valueOf","toString","DeleteOutlined","props","React","AntdIcon","_objectSpread","icon","DeleteOutlinedSvg","registerTarget","target","manager","registry","getRegistry","targetId","addTarget","removeTarget","registerSource","sourceId","addSource","removeSource","useConnectDragSource","dragSource","useConnectDragPreview","dragPreview","SourceConnector","receiveHandlerId","newHandlerId","this","connectTarget","dragSourceOptions","dragSourceOptionsInternal","dragPreviewOptions","dragPreviewOptionsInternal","didChange","reconnectDragSource","reconnectDragPreview","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","dragSourceUnsubscribe","backend","connectDragSource","forceDidChange","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","lastConnectedDragPreview","lastConnectedDragPreviewOptions","dragPreviewUnsubscribe","connectDragPreview","undefined","dragPreviewNode","dragPreviewRef","dragSourceNode","dragSourceRef","clearDragSource","clearDragPreview","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","canDrag","internalMonitor","canDragSource","isDragging","isDraggingSource","listener","isOverTarget","getTargetIds","isSourcePublic","getSourceId","subscribeToOffsetChange","canDropOnTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","getMonitor","DragSourceImpl","beginDrag","spec","result","item","globalMonitor","endDrag","end","useRegisteredDragSource","handler","useDragSource","itemType","useDragType","unregister","useDrag","specArg","begin","useDragSourceMonitor","getBackend","useDragSourceConnector","previewOptions","useConnectDropTarget","dropTarget","TargetConnector","didDropTargetChange","didOptionsChange","disconnectDropTarget","lastConnectedDropTarget","lastConnectedDropTargetOptions","dropTargetOptions","unsubscribeDropTarget","connectDropTarget","dropTargetOptionsInternal","dropTargetNode","dropTargetRef","clearDropTarget","isCallingCanDrop","DropTargetMonitorImpl","canDrop","isOver","DropTargetImpl","hover","drop","useRegisteredDropTarget","useDropTarget","accept","useAccept","map","join","useDrop","useDropTargetMonitor","useDropTargetConnector"],"mappings":"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","file":"static/js/7.1364b117.chunk.js","sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type { DragDropManager } from 'dnd-core'\nimport { useContext } from 'react'\n\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\n// suppress the useLayoutEffect warning on server side.\nexport const useIsomorphicLayoutEffect =\n\ttypeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import { useMemo } from 'react'\n\nimport type { FactoryOrInstance } from './types.js'\n\nexport function useOptionalFactory<T>(\n\targ: FactoryOrInstance<T>,\n\tdeps?: unknown[],\n): T {\n\tconst memoDeps = [...(deps || [])]\n\tif (deps == null && typeof arg !== 'function') {\n\t\tmemoDeps.push(arg)\n\t}\n\treturn useMemo<T>(() => {\n\t\treturn typeof arg === 'function' ? (arg as () => T)() : (arg as T)\n\t}, memoDeps)\n}\n","export function shallowEqual<T>(\n\tobjA: T,\n\tobjB: T,\n\tcompare?: (a: T, b: T, key?: string) => boolean | void,\n\tcompareContext?: any,\n) {\n\tlet compareResult = compare\n\t\t? compare.call(compareContext, objA, objB)\n\t\t: void 0\n\tif (compareResult !== void 0) {\n\t\treturn !!compareResult\n\t}\n\n\tif (objA === objB) {\n\t\treturn true\n\t}\n\n\tif (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n\t\treturn false\n\t}\n\n\tconst keysA = Object.keys(objA)\n\tconst keysB = Object.keys(objB)\n\n\tif (keysA.length !== keysB.length) {\n\t\treturn false\n\t}\n\n\tconst bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB)\n\n\t// Test for A's keys different from B.\n\tfor (let idx = 0; idx < keysA.length; idx++) {\n\t\tconst key = keysA[idx] as string\n\n\t\tif (!bHasOwnProperty(key)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst valueA = (objA as any)[key]\n\t\tconst valueB = (objB as any)[key]\n\n\t\tcompareResult = compare\n\t\t\t? compare.call(compareContext, valueA, valueB, key)\n\t\t\t: void 0\n\n\t\tif (\n\t\t\tcompareResult === false ||\n\t\t\t(compareResult === void 0 && valueA !== valueB)\n\t\t) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { ReactElement } from 'react'\nimport { cloneElement, isValidElement } from 'react'\n\nfunction throwIfCompositeComponentElement(element: ReactElement<any>) {\n\t// Custom components can no longer be wrapped directly in React DnD 2.0\n\t// so that we don't need to depend on findDOMNode() from react-dom.\n\tif (typeof element.type === 'string') {\n\t\treturn\n\t}\n\n\tconst displayName =\n\t\t(element.type as any).displayName || element.type.name || 'the component'\n\n\tthrow new Error(\n\t\t'Only native element nodes can now be passed to React DnD connectors.' +\n\t\t\t`You can either wrap ${displayName} into a <div>, or turn it into a ` +\n\t\t\t'drag source or a drop target itself.',\n\t)\n}\n\nfunction wrapHookToRecognizeElement(hook: (node: any, options: any) => void) {\n\treturn (elementOrNode = null, options = null) => {\n\t\t// When passed a node, call the hook straight away.\n\t\tif (!isValidElement(elementOrNode)) {\n\t\t\tconst node = elementOrNode\n\t\t\thook(node, options)\n\t\t\t// return the node so it can be chained (e.g. when within callback refs\n\t\t\t// <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\t\t\treturn node\n\t\t}\n\n\t\t// If passed a ReactElement, clone it and attach this function as a ref.\n\t\t// This helps us achieve a neat API where user doesn't even know that refs\n\t\t// are being used under the hood.\n\t\tconst element: ReactElement | null = elementOrNode\n\t\tthrowIfCompositeComponentElement(element as any)\n\n\t\t// When no options are passed, use the hook directly\n\t\tconst ref = options ? (node: Element) => hook(node, options) : hook\n\t\treturn cloneWithRef(element, ref)\n\t}\n}\n\nexport function wrapConnectorHooks(hooks: any) {\n\tconst wrappedHooks: any = {}\n\n\tObject.keys(hooks).forEach((key) => {\n\t\tconst hook = hooks[key]\n\n\t\t// ref objects should be passed straight through without wrapping\n\t\tif (key.endsWith('Ref')) {\n\t\t\twrappedHooks[key] = hooks[key]\n\t\t} else {\n\t\t\tconst wrappedHook = wrapHookToRecognizeElement(hook)\n\t\t\twrappedHooks[key] = () => wrappedHook\n\t\t}\n\t})\n\n\treturn wrappedHooks\n}\n\nfunction setRef(ref: any, node: any) {\n\tif (typeof ref === 'function') {\n\t\tref(node)\n\t} else {\n\t\tref.current = node\n\t}\n}\n\nfunction cloneWithRef(element: any, newRef: any): ReactElement<any> {\n\tconst previousRef = element.ref\n\tinvariant(\n\t\ttypeof previousRef !== 'string',\n\t\t'Cannot connect React DnD to an element with an existing string ref. ' +\n\t\t\t'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n\t\t\t'Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs',\n\t)\n\n\tif (!previousRef) {\n\t\t// When there is no ref on the element, use the new ref directly\n\t\treturn cloneElement(element, {\n\t\t\tref: newRef,\n\t\t})\n\t} else {\n\t\treturn cloneElement(element, {\n\t\t\tref: (node: any) => {\n\t\t\t\tsetRef(previousRef, node)\n\t\t\t\tsetRef(newRef, node)\n\t\t\t},\n\t\t})\n\t}\n}\n","export interface Ref<T> {\n\tcurrent: T\n}\n\nexport function isRef(obj: unknown): boolean {\n\treturn (\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\tObject.prototype.hasOwnProperty.call(obj, 'current')\n\t)\n}\n","import type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\nexport function useMonitorOutput<Monitor extends HandlerManager, Collected>(\n\tmonitor: Monitor & MonitorEventEmitter,\n\tcollect: (monitor: Monitor) => Collected,\n\tonCollect?: () => void,\n): Collected {\n\tconst [collected, updateCollected] = useCollector(monitor, collect, onCollect)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction subscribeToMonitorStateChange() {\n\t\t\tconst handlerId = monitor.getHandlerId()\n\t\t\tif (handlerId == null) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn monitor.subscribeToStateChange(updateCollected, {\n\t\t\t\thandlerIds: [handlerId],\n\t\t\t})\n\t\t},\n\t\t[monitor, updateCollected],\n\t)\n\n\treturn collected\n}\n","import equal from 'fast-deep-equal'\nimport { useCallback, useState } from 'react'\n\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector<T, S>(\n\tmonitor: T,\n\tcollect: (monitor: T) => S,\n\tonUpdate?: () => void,\n): [S, () => void] {\n\tconst [collected, setCollected] = useState(() => collect(monitor))\n\n\tconst updateCollected = useCallback(() => {\n\t\tconst nextValue = collect(monitor)\n\t\t// This needs to be a deep-equality check because some monitor-collected values\n\t\t// include XYCoord objects that may be equivalent, but do not have instance equality.\n\t\tif (!equal(collected, nextValue)) {\n\t\t\tsetCollected(nextValue)\n\t\t\tif (onUpdate) {\n\t\t\t\tonUpdate()\n\t\t\t}\n\t\t}\n\t}, [collected, monitor, onUpdate])\n\n\t// update the collected properties after react renders.\n\t// Note that the \"Dustbin Stress Test\" fails if this is not\n\t// done when the component updates\n\tuseIsomorphicLayoutEffect(updateCollected)\n\n\treturn [collected, updateCollected]\n}\n","import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\nDeleteOutlined.displayName = 'DeleteOutlined';\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","import type {\n\tDragDropManager,\n\tDragSource,\n\tDropTarget,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n\tUnsubscribe,\n} from 'dnd-core'\n\nexport function registerTarget(\n\ttype: TargetType,\n\ttarget: DropTarget,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst targetId = registry.addTarget(type, target)\n\n\treturn [targetId, () => registry.removeTarget(targetId)]\n}\n\nexport function registerSource(\n\ttype: SourceType,\n\tsource: DragSource,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst sourceId = registry.addSource(type, source)\n\n\treturn [sourceId, () => registry.removeSource(sourceId)]\n}\n","import { useMemo } from 'react'\n\nimport type { SourceConnector } from '../../internals/index.js'\n\nexport function useConnectDragSource(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragSource(), [connector])\n}\n\nexport function useConnectDragPreview(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragPreview(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { ReactElement, Ref, RefObject } from 'react'\n\nimport type { DragPreviewOptions, DragSourceOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport interface Connector {\n\thooks: any\n\tconnectTarget: any\n\treceiveHandlerId(handlerId: Identifier | null): void\n\treconnect(): void\n}\n\nexport class SourceConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdragSource: (\n\t\t\tnode: Element | ReactElement | Ref<any>,\n\t\t\toptions?: DragSourceOptions,\n\t\t) => {\n\t\t\tthis.clearDragSource()\n\t\t\tthis.dragSourceOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragSourceRef = node as RefObject<any>\n\t\t\t} else {\n\t\t\t\tthis.dragSourceNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragSource()\n\t\t},\n\t\tdragPreview: (node: any, options?: DragPreviewOptions) => {\n\t\t\tthis.clearDragPreview()\n\t\t\tthis.dragPreviewOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragPreviewRef = node\n\t\t\t} else {\n\t\t\t\tthis.dragPreviewNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragPreview()\n\t\t},\n\t})\n\tprivate handlerId: Identifier | null = null\n\n\t// The drop target may either be attached via ref or connect function\n\tprivate dragSourceRef: RefObject<any> | null = null\n\tprivate dragSourceNode: any\n\tprivate dragSourceOptionsInternal: DragSourceOptions | null = null\n\tprivate dragSourceUnsubscribe: Unsubscribe | undefined\n\n\t// The drag preview may either be attached via ref or connect function\n\tprivate dragPreviewRef: RefObject<any> | null = null\n\tprivate dragPreviewNode: any\n\tprivate dragPreviewOptionsInternal: DragPreviewOptions | null = null\n\tprivate dragPreviewUnsubscribe: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDragSource: any = null\n\tprivate lastConnectedDragSourceOptions: any = null\n\tprivate lastConnectedDragPreview: any = null\n\tprivate lastConnectedDragPreviewOptions: any = null\n\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (this.handlerId === newHandlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dragSource\n\t}\n\n\tpublic get dragSourceOptions(): DragSourceOptions | null {\n\t\treturn this.dragSourceOptionsInternal\n\t}\n\tpublic set dragSourceOptions(options: DragSourceOptions | null) {\n\t\tthis.dragSourceOptionsInternal = options\n\t}\n\n\tpublic get dragPreviewOptions(): DragPreviewOptions | null {\n\t\treturn this.dragPreviewOptionsInternal\n\t}\n\n\tpublic set dragPreviewOptions(options: DragPreviewOptions | null) {\n\t\tthis.dragPreviewOptionsInternal = options\n\t}\n\n\tpublic reconnect(): void {\n\t\tconst didChange = this.reconnectDragSource()\n\t\tthis.reconnectDragPreview(didChange)\n\t}\n\n\tprivate reconnectDragSource(): boolean {\n\t\tconst dragSource = this.dragSource\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragSourceChange() ||\n\t\t\tthis.didDragSourceOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragSource()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn didChange\n\t\t}\n\t\tif (!dragSource) {\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\treturn didChange\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\tthis.lastConnectedDragSourceOptions = this.dragSourceOptions\n\t\t\tthis.dragSourceUnsubscribe = this.backend.connectDragSource(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragSource,\n\t\t\t\tthis.dragSourceOptions,\n\t\t\t)\n\t\t}\n\t\treturn didChange\n\t}\n\n\tprivate reconnectDragPreview(forceDidChange = false): void {\n\t\tconst dragPreview = this.dragPreview\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tforceDidChange ||\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragPreviewChange() ||\n\t\t\tthis.didDragPreviewOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragPreview()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dragPreview) {\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\tthis.lastConnectedDragPreviewOptions = this.dragPreviewOptions\n\t\t\tthis.dragPreviewUnsubscribe = this.backend.connectDragPreview(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragPreview,\n\t\t\t\tthis.dragPreviewOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didConnectedDragSourceChange(): boolean {\n\t\treturn this.lastConnectedDragSource !== this.dragSource\n\t}\n\n\tprivate didConnectedDragPreviewChange(): boolean {\n\t\treturn this.lastConnectedDragPreview !== this.dragPreview\n\t}\n\n\tprivate didDragSourceOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragSourceOptions,\n\t\t\tthis.dragSourceOptions,\n\t\t)\n\t}\n\n\tprivate didDragPreviewOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragPreviewOptions,\n\t\t\tthis.dragPreviewOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDragSource() {\n\t\tif (this.dragSourceUnsubscribe) {\n\t\t\tthis.dragSourceUnsubscribe()\n\t\t\tthis.dragSourceUnsubscribe = undefined\n\t\t}\n\t}\n\n\tpublic disconnectDragPreview() {\n\t\tif (this.dragPreviewUnsubscribe) {\n\t\t\tthis.dragPreviewUnsubscribe()\n\t\t\tthis.dragPreviewUnsubscribe = undefined\n\t\t\tthis.dragPreviewNode = null\n\t\t\tthis.dragPreviewRef = null\n\t\t}\n\t}\n\n\tprivate get dragSource() {\n\t\treturn (\n\t\t\tthis.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current)\n\t\t)\n\t}\n\n\tprivate get dragPreview() {\n\t\treturn (\n\t\t\tthis.dragPreviewNode ||\n\t\t\t(this.dragPreviewRef && this.dragPreviewRef.current)\n\t\t)\n\t}\n\n\tprivate clearDragSource() {\n\t\tthis.dragSourceNode = null\n\t\tthis.dragSourceRef = null\n\t}\n\n\tprivate clearDragPreview() {\n\t\tthis.dragPreviewNode = null\n\t\tthis.dragPreviewRef = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DragSourceMonitor } from '../types/index.js'\n\nlet isCallingCanDrag = false\nlet isCallingIsDragging = false\n\nexport class DragSourceMonitorImpl implements DragSourceMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate sourceId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(sourceId: Identifier | null): void {\n\t\tthis.sourceId = sourceId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.sourceId\n\t}\n\n\tpublic canDrag(): boolean {\n\t\tinvariant(\n\t\t\t!isCallingCanDrag,\n\t\t\t'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrag = true\n\t\t\treturn this.internalMonitor.canDragSource(this.sourceId as Identifier)\n\t\t} finally {\n\t\t\tisCallingCanDrag = false\n\t\t}\n\t}\n\n\tpublic isDragging(): boolean {\n\t\tif (!this.sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingIsDragging,\n\t\t\t'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingIsDragging = true\n\t\t\treturn this.internalMonitor.isDraggingSource(this.sourceId)\n\t\t} finally {\n\t\t\tisCallingIsDragging = false\n\t\t}\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic isDraggingSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.isDraggingSource(sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: Identifier,\n\t\toptions?: { shallow: boolean },\n\t): boolean {\n\t\treturn this.internalMonitor.isOverTarget(targetId, options)\n\t}\n\n\tpublic getTargetIds(): Identifier[] {\n\t\treturn this.internalMonitor.getTargetIds()\n\t}\n\n\tpublic isSourcePublic(): boolean | null {\n\t\treturn this.internalMonitor.isSourcePublic()\n\t}\n\n\tpublic getSourceId(): Identifier | null {\n\t\treturn this.internalMonitor.getSourceId()\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToOffsetChange(listener)\n\t}\n\n\tpublic canDragSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDragSource(sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDropOnTarget(targetId)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DragDropMonitor, DragSource, Identifier } from 'dnd-core'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragObjectFactory, DragSourceHookSpec } from '../types.js'\n\nexport class DragSourceImpl<O, R, P> implements DragSource {\n\tpublic constructor(\n\t\tpublic spec: DragSourceHookSpec<O, R, P>,\n\t\tprivate monitor: DragSourceMonitor<O, R>,\n\t\tprivate connector: Connector,\n\t) {}\n\n\tpublic beginDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\n\t\tlet result: O | null = null\n\t\tif (typeof spec.item === 'object') {\n\t\t\tresult = spec.item as O\n\t\t} else if (typeof spec.item === 'function') {\n\t\t\tresult = (spec.item as DragObjectFactory<O>)(monitor)\n\t\t} else {\n\t\t\tresult = {} as O\n\t\t}\n\t\treturn result ?? null\n\t}\n\n\tpublic canDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (typeof spec.canDrag === 'boolean') {\n\t\t\treturn spec.canDrag\n\t\t} else if (typeof spec.canDrag === 'function') {\n\t\t\treturn spec.canDrag(monitor)\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\n\tpublic isDragging(globalMonitor: DragDropMonitor, target: Identifier) {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst { isDragging } = spec\n\t\treturn isDragging\n\t\t\t? isDragging(monitor)\n\t\t\t: target === globalMonitor.getSourceId()\n\t}\n\n\tpublic endDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst connector = this.connector\n\t\tconst { end } = spec\n\t\tif (end) {\n\t\t\tend(monitor.getItem(), monitor)\n\t\t}\n\t\tconnector.reconnect()\n\t}\n}\n","import type { SourceConnector } from '../../internals/index.js'\nimport { registerSource } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useDragSource } from './useDragSource.js'\nimport { useDragType } from './useDragType.js'\n\nexport function useRegisteredDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: SourceConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst handler = useDragSource(spec, monitor, connector)\n\tconst itemType = useDragType(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDragSource() {\n\t\t\tif (itemType != null) {\n\t\t\t\tconst [handlerId, unregister] = registerSource(\n\t\t\t\t\titemType,\n\t\t\t\t\thandler,\n\t\t\t\t\tmanager,\n\t\t\t\t)\n\t\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\t\treturn unregister\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\t[manager, monitor, connector, handler, itemType],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { DragSourceImpl } from './DragSourceImpl.js'\n\nexport function useDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: Connector,\n) {\n\tconst handler = useMemo(\n\t\t() => new DragSourceImpl(spec, monitor, connector),\n\t\t[monitor, connector],\n\t)\n\tuseEffect(() => {\n\t\thandler.spec = spec\n\t}, [spec])\n\treturn handler\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DragSourceHookSpec } from '../types.js'\n\nexport function useDragType(\n\tspec: DragSourceHookSpec<any, any, any>,\n): Identifier {\n\treturn useMemo(() => {\n\t\tconst result: Identifier = spec.type\n\t\tinvariant(result != null, 'spec.type must be defined')\n\t\treturn result\n\t}, [spec])\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tConnectDragPreview,\n\tConnectDragSource,\n} from '../../types/index.js'\nimport type { DragSourceHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDragPreview, useConnectDragSource } from './connectors.js'\nimport { useDragSourceConnector } from './useDragSourceConnector.js'\nimport { useDragSourceMonitor } from './useDragSourceMonitor.js'\nimport { useRegisteredDragSource } from './useRegisteredDragSource.js'\n\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrag<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDragSourceHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDragSource, ConnectDragPreview] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tinvariant(\n\t\t!(spec as any).begin,\n\t\t`useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)`,\n\t)\n\n\tconst monitor = useDragSourceMonitor<DragObject, DropResult>()\n\tconst connector = useDragSourceConnector(spec.options, spec.previewOptions)\n\tuseRegisteredDragSource(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDragSource(connector),\n\t\tuseConnectDragPreview(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DragSourceMonitorImpl } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDragSourceMonitor<O, R>(): DragSourceMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo<DragSourceMonitor<O, R>>(\n\t\t() => new DragSourceMonitorImpl(manager),\n\t\t[manager],\n\t)\n}\n","import { useMemo } from 'react'\n\nimport { SourceConnector } from '../../internals/index.js'\nimport type {\n\tDragPreviewOptions,\n\tDragSourceOptions,\n} from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDragSourceConnector(\n\tdragSourceOptions: DragSourceOptions | undefined,\n\tdragPreviewOptions: DragPreviewOptions | undefined,\n): SourceConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new SourceConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragSourceOptions = dragSourceOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragSource()\n\t}, [connector, dragSourceOptions])\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragPreviewOptions = dragPreviewOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragPreview()\n\t}, [connector, dragPreviewOptions])\n\treturn connector\n}\n","import { useMemo } from 'react'\n\nimport type { TargetConnector } from '../../internals/index.js'\n\nexport function useConnectDropTarget(connector: TargetConnector) {\n\treturn useMemo(() => connector.hooks.dropTarget(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { RefObject } from 'react'\n\nimport type { DropTargetOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport type { Connector } from './SourceConnector.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport class TargetConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdropTarget: (node: any, options: DropTargetOptions) => {\n\t\t\tthis.clearDropTarget()\n\t\t\tthis.dropTargetOptions = options\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dropTargetRef = node\n\t\t\t} else {\n\t\t\t\tthis.dropTargetNode = node\n\t\t\t}\n\t\t\tthis.reconnect()\n\t\t},\n\t})\n\n\tprivate handlerId: Identifier | null = null\n\t// The drop target may either be attached via ref or connect function\n\tprivate dropTargetRef: RefObject<any> | null = null\n\tprivate dropTargetNode: any\n\tprivate dropTargetOptionsInternal: DropTargetOptions | null = null\n\tprivate unsubscribeDropTarget: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDropTarget: any = null\n\tprivate lastConnectedDropTargetOptions: DropTargetOptions | null = null\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dropTarget\n\t}\n\n\tpublic reconnect(): void {\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didDropTargetChange() ||\n\t\t\tthis.didOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDropTarget()\n\t\t}\n\n\t\tconst dropTarget = this.dropTarget\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dropTarget) {\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\tthis.lastConnectedDropTargetOptions = this.dropTargetOptions\n\n\t\t\tthis.unsubscribeDropTarget = this.backend.connectDropTarget(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdropTarget,\n\t\t\t\tthis.dropTargetOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (newHandlerId === this.handlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get dropTargetOptions(): DropTargetOptions {\n\t\treturn this.dropTargetOptionsInternal\n\t}\n\tpublic set dropTargetOptions(options: DropTargetOptions) {\n\t\tthis.dropTargetOptionsInternal = options\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didDropTargetChange(): boolean {\n\t\treturn this.lastConnectedDropTarget !== this.dropTarget\n\t}\n\n\tprivate didOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDropTargetOptions,\n\t\t\tthis.dropTargetOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDropTarget() {\n\t\tif (this.unsubscribeDropTarget) {\n\t\t\tthis.unsubscribeDropTarget()\n\t\t\tthis.unsubscribeDropTarget = undefined\n\t\t}\n\t}\n\n\tprivate get dropTarget() {\n\t\treturn (\n\t\t\tthis.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current)\n\t\t)\n\t}\n\n\tprivate clearDropTarget() {\n\t\tthis.dropTargetRef = null\n\t\tthis.dropTargetNode = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DropTarget } from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\n\nexport class DropTargetImpl<O, R, P> implements DropTarget {\n\tpublic constructor(\n\t\tpublic spec: DropTargetHookSpec<O, R, P>,\n\t\tprivate monitor: DropTargetMonitor<O, R>,\n\t) {}\n\n\tpublic canDrop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\treturn spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true\n\t}\n\n\tpublic hover() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.hover) {\n\t\t\tspec.hover(monitor.getItem(), monitor)\n\t\t}\n\t}\n\n\tpublic drop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.drop) {\n\t\t\treturn spec.drop(monitor.getItem(), monitor)\n\t\t}\n\t\treturn\n\t}\n}\n","import type { TargetConnector } from '../../internals/index.js'\nimport { registerTarget } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useAccept } from './useAccept.js'\nimport { useDropTarget } from './useDropTarget.js'\n\nexport function useRegisteredDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n\tconnector: TargetConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst dropTarget = useDropTarget(spec, monitor)\n\tconst accept = useAccept(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDropTarget() {\n\t\t\tconst [handlerId, unregister] = registerTarget(\n\t\t\t\taccept,\n\t\t\t\tdropTarget,\n\t\t\t\tmanager,\n\t\t\t)\n\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\treturn unregister\n\t\t},\n\t\t[\n\t\t\tmanager,\n\t\t\tmonitor,\n\t\t\tdropTarget,\n\t\t\tconnector,\n\t\t\taccept.map((a) => a.toString()).join('|'),\n\t\t],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { DropTargetImpl } from './DropTargetImpl.js'\n\nexport function useDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n) {\n\tconst dropTarget = useMemo(() => new DropTargetImpl(spec, monitor), [monitor])\n\tuseEffect(() => {\n\t\tdropTarget.spec = spec\n\t}, [spec])\n\treturn dropTarget\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DropTargetHookSpec } from '../types.js'\n\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */\nexport function useAccept<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n): Identifier[] {\n\tconst { accept } = spec\n\treturn useMemo(() => {\n\t\tinvariant(spec.accept != null, 'accept must be defined')\n\t\treturn Array.isArray(accept) ? accept : [accept]\n\t}, [accept])\n}\n","import type { ConnectDropTarget } from '../../types/index.js'\nimport type { DropTargetHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDropTarget } from './connectors.js'\nimport { useDropTargetConnector } from './useDropTargetConnector.js'\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js'\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js'\n\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrop<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDropTargetHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDropTarget] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tconst monitor = useDropTargetMonitor<DragObject, DropResult>()\n\tconst connector = useDropTargetConnector(spec.options)\n\tuseRegisteredDropTarget(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDropTarget(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DropTargetMonitorImpl } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDropTargetMonitor<O, R>(): DropTargetMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo(() => new DropTargetMonitorImpl(manager), [manager])\n}\n","import { useMemo } from 'react'\n\nimport { TargetConnector } from '../../internals/index.js'\nimport type { DropTargetOptions } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDropTargetConnector(\n\toptions: DropTargetOptions,\n): TargetConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new TargetConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dropTargetOptions = options || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDropTarget()\n\t}, [options])\n\treturn connector\n}\n"],"sourceRoot":""}