{"version":3,"sources":["views/app-views/pages/planner/ItemTypes.js","views/app-views/pages/planner/Element.jsx","redux/selectors/Planner.js","views/app-views/pages/planner/UploadedPlanItem.jsx","views/app-views/pages/planner/UploadedPlans.jsx","views/app-views/pages/planner/PlanningField.jsx","views/app-views/pages/planner/StartingElementsField.jsx","views/app-views/pages/planner/index.jsx"],"names":["ItemTypes","imgStyle","width","height","objectFit","Element","memo","_ref","id","left","top","title","hideSourceOnDrag","isRotate","img","isStarting","handleRemoveClick","dispatch","useDispatch","mouse","setMouse","useState","x","y","isDragging","drag","useDrag","type","item","collect","monitor","styles","cursor","position","opacity","_jsx","ref","_jsxs","children","className","style","onMouseMove","event","offsetX","nativeEvent","offsetY","onDoubleClick","handleDoubleClick","rotateActiveElement","src","rotate","noRotate","alt","right","onClick","CloseCircleOutlined","color","getActiveElements","state","planner","activeElements","UploadedPlanItem","plan","handlePlanClick","isActive","padding","border","margin","listStyle","borderRadius","backgroundColor","display","alignItems","justifyContent","Tooltip","Button","shape","icon","DeleteOutlined","ulStyle","overflowY","paddingLeft","formStyle","marginTop","inputStyle","outline","UploadedPlans","newPlanName","setNewPlanName","uploadedPlans","setUploadedPlans","useSelector","isLoading","loading","getPlannerLoading","planMessage","message","getPlannerMessage","handleSaveClick","async","e","preventDefault","currentPlan","length","filter","newPlan","elements","fetchUpdatePlan","fetchAddPlan","handleUploadPlanRemoveClick","planId","fetchRemovePlan","useEffect","setPlannerLoading","q","query","collection","db","PLAN_COLLECTION_NAME","unsubscribe","onSnapshot","querySnapshot","activeElementsArr","forEach","doc","push","data","alert","uploadedPlanList","map","selectedPlan","setActiveElements","Loading","onSubmit","value","onChange","currentTarget","disabled","Object","keys","backgroundImage","backgroundSize","PlanningField","containerRef","useRef","calculationCoordinates","elementHeight","elementWidth","res","finalX","finalY","current","offsetWidth","offsetHeight","drop","useDrop","accept","clientOffset","getClientOffset","containerRect","getBoundingClientRect","containerX","window","pageXOffset","containerY","pageYOffset","clientX","clientY","scrollX","scrollLeft","scrollY","scrollTop","addActiveElement","Date","getTime","delta","getDifferenceFromInitialOffset","Math","round","moveElement","activeElementsList","key","removeActivePlanElement","gridTemplateColumns","gap","StartingElementsField","startElementsList","startElements","getStartElements","el","Planner","Card"],"mappings":"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","file":"static/js/18.82b7a405.chunk.js","sourcesContent":["export const ItemTypes = {\r\n    BOX: 'box',\r\n}","import {useDrag} from 'react-dnd'\r\nimport {ItemTypes} from './ItemTypes.js'\r\nimport {useState} from \"react\";\r\nimport {rotateActiveElement} from \"../../../../redux/actions/Planner\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {memo} from 'react'\r\nimport {CloseCircleOutlined} from \"@ant-design/icons\";\r\n\r\nconst imgStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"cover\",\r\n};\r\n\r\nconst Element = memo(({\r\n                          id, left, top, title, width, height, hideSourceOnDrag, isRotate, img,\r\n                          isStarting = false, handleRemoveClick\r\n                      }) => {\r\n    const dispatch = useDispatch()\r\n    const [mouse, setMouse] = useState({x: 0, y: 0})\r\n    const handleMouseMove = (event) => {\r\n        const offsetX = event.nativeEvent.offsetX;\r\n        const offsetY = event.nativeEvent.offsetY;\r\n        setMouse({x: offsetX, y: offsetY})\r\n    }\r\n    const [{isDragging}, drag] = useDrag(\r\n        () => ({\r\n            type: ItemTypes.BOX,\r\n            item: {id, left, top, width, height, mouse},\r\n            collect: (monitor) => ({\r\n                isDragging: monitor.isDragging(),\r\n            }),\r\n        }),\r\n        [id, left, top, mouse, width, height],\r\n    )\r\n    const styles = {\r\n        width: width,\r\n        height: height,\r\n        left: left,\r\n        top: top,\r\n        cursor: 'move',\r\n        position: isStarting ? 'relative' : ' absolute',\r\n        opacity: isDragging && !isStarting ? 0 : 1,\r\n    }\r\n    const handleDoubleClick = () => {\r\n        if (!isStarting) {\r\n            dispatch(rotateActiveElement(id))\r\n        }\r\n    }\r\n    if (isDragging && hideSourceOnDrag) {\r\n        return <div ref={drag}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div\r\n                className=\"box\"\r\n                ref={drag}\r\n                style={styles}\r\n                onMouseMove={handleMouseMove}\r\n                onDoubleClick={handleDoubleClick}\r\n                data-testid=\"box\"\r\n            >\r\n                <img src={isRotate ? img.rotate : img.noRotate} alt=\"furniture\" style={imgStyle}/>\r\n                {!isStarting && (\r\n                    <div style={{position: \"absolute\", right: \"3px\", top: \"2px\", cursor: \"pointer\"}}\r\n                         onClick={handleRemoveClick}>\r\n                        <CloseCircleOutlined style={{color: \"blue\"}}/>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {isStarting && (<span>{title}</span>)}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Element","export const getStartElements = (state) => {\r\n    return state.planner.startElements\r\n}\r\nexport const getStartElementById = (state,id) => {\r\n    return state.planner.startElements.find(el => el.id === id)\r\n}\r\nexport const getActiveElements = (state) => {\r\n    return state.planner.activeElements\r\n}\r\nexport const getPlannerLoading = (state) => {\r\n    return state.planner.loading\r\n}\r\n\r\nexport const getPlannerMessage = (state) => {\r\n    return state.planner.message\r\n}","import React from 'react';\r\nimport {Button, Tooltip} from 'antd';\r\nimport {DeleteOutlined} from '@ant-design/icons';\r\n\r\nconst UploadedPlanItem = ({plan, handlePlanClick, isActive, handleRemoveClick}) => {\r\n    return (\r\n        <li key={plan.id} onClick={() => handlePlanClick(plan.id)}\r\n            style={{\r\n                color: isActive ? \"white\" : \"blue\",\r\n                padding: \"15px\",\r\n                border: \"1px solid white\",\r\n                margin: \"10px 10px 0 0\",\r\n                cursor: \"pointer\",\r\n                listStyle: \"none\",\r\n                borderRadius: \"20px\",\r\n                backgroundColor: isActive ? \"blue\" : \"white\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n            }}>\r\n            <span>{plan.title}</span>\r\n            <Tooltip title=\"Удалить\">\r\n                <Button onClick={handleRemoveClick}\r\n                        type=\"primary\"\r\n                        shape=\"circle\"\r\n                        icon={<DeleteOutlined/>}/>\r\n            </Tooltip>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default UploadedPlanItem;","import React, {useState, useEffect} from 'react';\r\nimport {db} from \"../../../../configs/FirebaseConfig\";\r\nimport {\r\n    query,\r\n    collection,\r\n    onSnapshot,\r\n} from \"firebase/firestore\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getActiveElements, getPlannerLoading, getPlannerMessage} from \"../../../../redux/selectors/Planner\";\r\nimport {fetchAddPlan, fetchUpdatePlan, setActiveElements, setPlannerLoading, fetchRemovePlan} from \"../../../../redux/actions/Planner\";\r\nimport Loading from \"../../../../components/shared-components/Loading\";\r\nimport {PLAN_COLLECTION_NAME} from \"../../../../constants/ApiConstant\";\r\nimport UploadedPlanItem from \"./UploadedPlanItem\";\r\nimport {Button} from 'antd';\r\nimport {memo} from 'react'\r\n\r\nconst ulStyle = {\r\n    height: \"270px\",\r\n    overflowY: \"scroll\",\r\n    margin: \"0\",\r\n    paddingLeft: \"0\",\r\n    backgroundColor: \"whitesmoke\",\r\n    padding: \"10px\"\r\n}\r\nconst formStyle = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: \"20px\"\r\n}\r\nconst inputStyle = {padding: \"8px 12px\", borderRadius: \"20px\", outline: \"none\", border: \"1px solid blue\"}\r\n\r\nconst UploadedPlans = memo(() => {\r\n    const dispatch = useDispatch()\r\n    const [newPlanName, setNewPlanName] = useState(\"\")\r\n    const [uploadedPlans, setUploadedPlans] = useState([])\r\n    const activeElements = useSelector(state => getActiveElements(state))\r\n    const isLoading = useSelector(state => getPlannerLoading(state))\r\n    const planMessage = useSelector(state => getPlannerMessage(state))\r\n    const handleInputChange = (e) => {\r\n        setNewPlanName(e.currentTarget.value)\r\n    }\r\n    const handleSaveClick = async (e) => {\r\n        e.preventDefault()\r\n        let currentPlan = null\r\n        if (uploadedPlans.length) currentPlan = uploadedPlans.filter(plan => plan.title === newPlanName)[0]\r\n        const newPlan = {elements: {...activeElements}, title: newPlanName}\r\n        if (currentPlan && currentPlan.id) {\r\n            dispatch(fetchUpdatePlan(newPlan, currentPlan.id))\r\n        } else {\r\n            dispatch(fetchAddPlan(newPlan))\r\n        }\r\n    }\r\n    const handleUploadPlanClick = (planId) => () => {\r\n        const selectedPlan = uploadedPlans.filter(plan => plan.id === planId)[0]\r\n        dispatch(setActiveElements(selectedPlan.elements))\r\n        setNewPlanName(selectedPlan.title)\r\n    }\r\n    const handleUploadPlanRemoveClick = (planId) => () => {\r\n        dispatch(fetchRemovePlan(planId))\r\n    }\r\n    useEffect(() => {\r\n        dispatch(setPlannerLoading(true))\r\n        const q = query(collection(db, PLAN_COLLECTION_NAME));\r\n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n            const activeElementsArr = [];\r\n            try {\r\n                querySnapshot.forEach((doc) => {\r\n                    activeElementsArr.push({...doc.data(), id: doc.id});\r\n                });\r\n                setUploadedPlans(activeElementsArr)\r\n            } catch (e) {\r\n                alert(e);\r\n            } finally {\r\n                dispatch(setPlannerLoading(false))\r\n            }\r\n        });\r\n        return () => unsubscribe();\r\n    }, [dispatch]);\r\n    useEffect(() => {\r\n        if (planMessage) alert(planMessage);\r\n    }, [planMessage])\r\n    const uploadedPlanList = uploadedPlans.map(plan => (\r\n        <UploadedPlanItem key={plan.id}\r\n                          handlePlanClick={handleUploadPlanClick(plan.id)}\r\n                          plan={plan}\r\n                          handleRemoveClick={handleUploadPlanRemoveClick(plan.id)}\r\n                          isActive={plan.title === newPlanName}/>))\r\n    if (isLoading) return (<Loading/>)\r\n    return (\r\n        <div style={{height: \"100%\", padding: \"10px 20px\", backgroundColor: \"whitesmoke\"}}>\r\n            <div>\r\n                <h3>Загрузить</h3>\r\n                <ul style={ulStyle}>\r\n                    {uploadedPlanList}\r\n                </ul>\r\n            </div>\r\n            <form onSubmit={handleSaveClick} style={formStyle}>\r\n                <input type=\"text\" value={newPlanName} onChange={handleInputChange} style={inputStyle}/>\r\n                <Button type=\"primary\"\r\n                        onClick={handleSaveClick}\r\n                        disabled={!newPlanName.length || !Object.keys(activeElements).length}>\r\n                    Сохранить\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default UploadedPlans;","import {useRef} from 'react'\r\nimport {useDrop} from 'react-dnd'\r\nimport Element from './Element'\r\nimport {ItemTypes} from './ItemTypes.js'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getActiveElements} from \"../../../../redux/selectors/Planner\";\r\nimport {\r\n    addActiveElement,\r\n    moveElement,\r\n    removeActivePlanElement,\r\n} from \"../../../../redux/actions/Planner\";\r\nimport UploadedPlans from \"./UploadedPlans\";\r\n\r\nconst style = {\r\n    height: \"400px\",\r\n    width: \"100%\",\r\n    position: 'relative',\r\n    border: \"1px solid green\",\r\n    backgroundColor: \"white\",\r\n    backgroundImage:\r\n        \"linear-gradient(to right, whitesmoke 1px, transparent 1px),linear-gradient(to bottom, whitesmoke 1px, transparent 1px)\",\r\n    backgroundSize: \" 20px 20px\"\r\n}\r\n\r\nconst PlanningField = ({hideSourceOnDrag}) => {\r\n    const dispatch = useDispatch()\r\n    const containerRef = useRef(null);\r\n    const activeElements = useSelector(state => getActiveElements(state))\r\n    const handleActiveElementRemove = (id) => () => {\r\n        dispatch(removeActivePlanElement(id))\r\n    }\r\n    const calculationCoordinates = (x, y, elementHeight, elementWidth) => {\r\n        const res = {finalX: x, finalY: y}\r\n        const width = containerRef.current.offsetWidth;\r\n        const height = containerRef.current.offsetHeight;\r\n        if (x < 0) res.finalX = 0\r\n        if (y < 0) res.finalY = 0\r\n        if (x + elementWidth > width) res.finalX = width - elementWidth\r\n        if (y + elementHeight > height) res.finalY = height - elementHeight\r\n        return res\r\n    }\r\n    const [, drop] = useDrop(\r\n        () => ({\r\n            accept: ItemTypes.BOX,\r\n            drop(item, monitor) {\r\n                if (item.id < 1000) {\r\n                    const clientOffset = monitor.getClientOffset();\r\n                    if (clientOffset && containerRef.current) {\r\n                        const containerRect = containerRef.current.getBoundingClientRect();\r\n                        const containerX = containerRect.left + window.pageXOffset;\r\n                        const containerY = containerRect.top + window.pageYOffset;\r\n                        const clientX = clientOffset.x;\r\n                        const clientY = clientOffset.y;\r\n                        const scrollX = containerRef.current.scrollLeft;\r\n                        const scrollY = containerRef.current.scrollTop;\r\n                        const x = clientX - containerX + scrollX - item.mouse.x;\r\n                        const y = clientY - containerY + scrollY - item.mouse.y;\r\n                        const {finalX, finalY} = calculationCoordinates(x, y, item.height, item.width)\r\n                        dispatch(addActiveElement(item.id, new Date().getTime(), finalX, finalY))\r\n                    }\r\n                } else {\r\n                    const delta = monitor.getDifferenceFromInitialOffset()\r\n                    const left = Math.round(item.left + delta.x)\r\n                    const top = Math.round(item.top + delta.y)\r\n                    const {finalX, finalY} = calculationCoordinates(left, top, item.height, item.width)\r\n                    dispatch(moveElement(item.id, finalX, finalY))\r\n                }\r\n                return undefined\r\n            },\r\n        }),\r\n        [],\r\n    )\r\n    const activeElementsList = Object.keys(activeElements).map((key) => {\r\n        return (\r\n            <Element\r\n                key={key} {...activeElements[key]}\r\n                handleRemoveClick={handleActiveElementRemove(activeElements[key].id)}\r\n            />\r\n        )\r\n    })\r\n    return (\r\n        <div ref={containerRef} style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: '1fr 350px',\r\n            gap: \"20px\",\r\n        }}>\r\n            <div ref={drop} style={style}>\r\n                {activeElementsList}\r\n            </div>\r\n            <UploadedPlans/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlanningField;","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {getStartElements} from \"../../../../redux/selectors/Planner\";\r\nimport Element from \"./Element\";\r\nimport {memo} from 'react'\r\n\r\nconst StartingElementsField = memo(() => {\r\n    const startElements = useSelector(state => getStartElements(state))\r\n    const startElementsList = startElements.map(el => (<Element key = {el.id} {...el} isStarting/>))\r\n    return (\r\n        <div style={{height: \"200px\", backgroundColor: \"whitesmoke\", marginTop: \"20px\", padding: \"20px\"}}>\r\n            <div style={{\r\n                display: \"flex\",\r\n                alignItems: \"end\",\r\n                gap: \"40px\",\r\n\r\n            }}>\r\n                {startElementsList}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default StartingElementsField;","import React from 'react';\r\nimport {Card} from 'antd';\r\nimport PlanningField from \"./PlanningField\";\r\nimport StartingElementsField from \"./StartingElementsField\";\r\n\r\n\r\nconst Planner = () => {\r\n    return (\r\n        <Card>\r\n            <h3>Planner</h3>\r\n            <PlanningField/>\r\n            <p>Кликнете по элементу дважды, чтобы повернуть его.</p>\r\n            <StartingElementsField/>\r\n            <p>Чтобы добавить элемент в план, перетащите его мышкой.</p>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Planner;"],"sourceRoot":""}