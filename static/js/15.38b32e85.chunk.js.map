{"version":3,"sources":["redux/selectors/Clients.js","views/app-views/pages/edit-profile/index.jsx"],"names":["getAllClients","state","clients","getClientsIsLoading","loading","getEditionClient","editionClient","EditProfile","id","useParams","dispatch","useDispatch","history","useHistory","profile","useSelector","isLoading","getRules","name","required","message","concat","useEffect","fetchClientByID","_jsx","Loading","Card","children","Form","labelCol","span","wrapperCol","layout","initialValues","email","username","phone","website","address","city","street","suite","zipcode","company","catchPhrase","bs","onFinish","values","setClientsLoading","setTimeout","changeClient","geo","companyname","setEditionClient","push","onFinishFailed","alert","Row","_jsxs","Col","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","Input","Button","type","htmlType"],"mappings":"mGAAA,sGAAO,MAGMA,EAAiBC,GACnBA,EAAMC,QAAQA,QAEZC,EAAuBF,GACzBA,EAAMC,QAAQE,QAEZC,EAAoBJ,GACtBA,EAAMC,QAAQI,a,mCCVzB,iIA0IeC,UA1HKA,KAChB,IAAI,GAACC,GAAMC,cACX,MAAMC,EAAWC,cACXC,EAAUC,cACVC,EAAUC,aAAYd,GAASI,YAAiBJ,GAAQO,KACxDQ,EAAYD,aAAYd,GAASE,YAAoBF,KACrDgB,EAAYC,GAAU,CAAC,CAACC,UAAU,EAAMC,QAAQ,gBAADC,OAAkBH,KAkCvE,OAHAI,qBAAU,KACNZ,EAASa,YAAgBf,GAAI,GAC9B,CAACE,EAAUF,IACVQ,EAAmBQ,cAACC,IAAO,IAC1BX,EAAQI,KAETM,cAACE,IAAI,CAAAC,SACDH,cAACI,IAAI,CACDV,KAAK,mBACLW,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,IACnBE,OAAO,WACPC,cACI,CACI,KAAQnB,EAAQI,KAChB,MAASJ,EAAQoB,MACjB,SAAYpB,EAAQqB,SACpB,MAASrB,EAAQsB,MACjB,QAAWtB,EAAQuB,QACnB,KAAQvB,EAAQwB,QAAQC,KACxB,OAAUzB,EAAQwB,QAAQE,OAC1B,MAAS1B,EAAQwB,QAAQG,MACzB,QAAW3B,EAAQwB,QAAQI,QAC3B,YAAe5B,EAAQ6B,QAAQzB,KAC/B,YAAeJ,EAAQ6B,QAAQC,YAC/B,GAAM9B,EAAQ6B,QAAQE,IAG9BC,SA1DMC,IACdrC,EAASsC,aAAkB,IAC3BC,YAAW,KACPvC,EAASwC,YAAa,CAClB1C,GAAIM,EAAQN,GACZU,KAAM6B,EAAO7B,KACbgB,MAAOa,EAAOb,MACdC,SAAUY,EAAOZ,SACjBC,MAAOW,EAAOX,MACdC,QAASU,EAAOV,QAChBC,QAAS,CACLC,KAAMQ,EAAOR,KACbC,OAAQO,EAAOP,OACfC,MAAOM,EAAON,MACdC,QAASK,EAAOL,QAChBS,IAAK,IAAIrC,EAAQwB,QAAQa,MAE7BR,QAAS,CACLzB,KAAM6B,EAAOK,YACbR,YAAaG,EAAOH,YACpBC,GAAIE,EAAOF,OAGnBnC,EAAS2C,YAAiB,CAAC,IAC3BzC,EAAQ0C,KAAK,0BAA0B,GACxC,IAAK,EAkCAC,eAhCWA,KACnBC,MAAM,kHAAwB,EA+BS7B,SAC/BH,cAACiC,IAAG,CAAA9B,SACA+B,eAACC,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGpC,SAAA,CAChC+B,eAACD,IAAG,CAACO,OAAQC,IAAWtC,SAAA,CACpB+B,eAACC,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGnC,SAAA,CACxBH,cAACI,IAAKsC,KAAI,CAACC,MAAM,OAAOjD,KAAK,OAAOkD,MAAOnD,EAAS,QAAQU,SACxDH,cAAC6C,IAAK,MAEV7C,cAACI,IAAKsC,KAAI,CAACC,MAAM,SAASjD,KAAK,QAAQkD,MAAOnD,EAAS,UAAUU,SAC7DH,cAAC6C,IAAK,MAEV7C,cAACI,IAAKsC,KAAI,CAACC,MAAM,UAAUjD,KAAK,UAAUkD,MAAOnD,EAAS,WAAWU,SACjEH,cAAC6C,IAAK,MAEV7C,cAACI,IAAKsC,KAAI,CAACC,MAAM,QAAQjD,KAAK,QAAQkD,MAAOnD,EAAS,SAASU,SAC3DH,cAAC6C,IAAK,MAEV7C,cAACI,IAAKsC,KAAI,CAACC,MAAM,WAAWjD,KAAK,WAAWkD,MAAOnD,EAAS,YAAYU,SACpEH,cAAC6C,IAAK,MAEV7C,cAACI,IAAKsC,KAAI,CAACC,MAAM,eAAejD,KAAK,cAAckD,MAAOnD,EAAS,gBAAgBU,SAC/EH,cAAC6C,IAAK,MAEV7C,cAACI,IAAKsC,KAAI,CAACC,MAAM,sBAAsBjD,KAAK,cACjCkD,MAAOnD,EAAS,uBAAuBU,SAC9CH,cAAC6C,IAAK,MAEV7C,cAACI,IAAKsC,KAAI,CAACC,MAAM,aAAajD,KAAK,KAAKkD,MAAOnD,EAAS,cAAcU,SAClEH,cAAC6C,IAAK,SAGdX,eAACC,IAAG,CAAAhC,SAAA,CACAH,cAACI,IAAKsC,KAAI,CAACC,MAAM,OAAOjD,KAAK,OAAOkD,MAAOnD,EAAS,QAAQU,SACxDH,cAAC6C,IAAK,MAEV7C,cAACI,IAAKsC,KAAI,CAACC,MAAM,SAASjD,KAAK,SAASkD,MAAOnD,EAAS,UAAUU,SAC9DH,cAAC6C,IAAK,MAEV7C,cAACI,IAAKsC,KAAI,CAACC,MAAM,QAAQjD,KAAK,QAAQkD,MAAOnD,EAAS,SAASU,SAC3DH,cAAC6C,IAAK,MAEV7C,cAACI,IAAKsC,KAAI,CAACC,MAAM,UAAUjD,KAAK,UAAUkD,MAAOnD,EAAS,WAAWU,SACjEH,cAAC6C,IAAK,YAIlB7C,cAAC8C,IAAM,CAACC,KAAK,UAAUC,SAAS,SAAQ7C,SAAC,yBAvElCH,cAAA,KAAAG,SAAA,gJAAAN,OAAsCb,EAAE,mGA6ExD,C","file":"static/js/15.38b32e85.chunk.js","sourcesContent":["export const getClientById = (state, clientId) => {\r\n    return state.clients.clients.filter(client => client.id === clientId)[0];\r\n}\r\nexport const getAllClients = (state) => {\r\n    return state.clients.clients;\r\n}\r\nexport const getClientsIsLoading = (state) => {\r\n    return state.clients.loading;\r\n}\r\nexport const getEditionClient = (state) => {\r\n    return state.clients.editionClient;\r\n}","import React, {useEffect} from 'react';\r\nimport {Form, Button, Input, Row, Col} from 'antd';\r\nimport {ROW_GUTTER} from 'constants/ThemeConstant';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getClientsIsLoading, getEditionClient} from \"../../../../redux/selectors/Clients\";\r\nimport Loading from \"../../../../components/shared-components/Loading\";\r\nimport {\r\n    changeClient,\r\n    fetchClientByID,\r\n    setClientsLoading,\r\n    setEditionClient\r\n} from \"../../../../redux/actions/Clients\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Card} from 'antd';\r\n\r\nconst EditProfile = () => {\r\n    let {id} = useParams();\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const profile = useSelector(state => getEditionClient(state, +id))\r\n    const isLoading = useSelector(state => getClientsIsLoading(state))\r\n    const getRules = (name) => ([{required: true, message: `Please input ${name}`}])\r\n    const onFinish = (values) => {\r\n        dispatch(setClientsLoading(true))\r\n        setTimeout(() => {\r\n            dispatch(changeClient({\r\n                id: profile.id,\r\n                name: values.name,\r\n                email: values.email,\r\n                username: values.username,\r\n                phone: values.phone,\r\n                website: values.website,\r\n                address: {\r\n                    city: values.city,\r\n                    street: values.street,\r\n                    suite: values.suite,\r\n                    zipcode: values.zipcode,\r\n                    geo: {...profile.address.geo}\r\n                },\r\n                company: {\r\n                    name: values.companyname,\r\n                    catchPhrase: values.catchPhrase,\r\n                    bs: values.bs\r\n                }\r\n            }))\r\n            dispatch(setEditionClient({}))\r\n            history.push('/app/pages/clients-list')\r\n        }, 1000)\r\n    }\r\n    const onFinishFailed = () => {\r\n        alert(\"Не все поля заполнены\")\r\n    }\r\n    useEffect(() => {\r\n        dispatch(fetchClientByID(id))\r\n    }, [dispatch, id])\r\n    if (isLoading) return (<Loading/>)\r\n    if (!profile.name) return (<p>{`Не удаётся найти клиента с id: ${id} , Попробуйте позже`}</p>)\r\n    return (\r\n        <Card>\r\n            <Form\r\n                name=\"basicInformation\"\r\n                labelCol={{span: 8}}\r\n                wrapperCol={{span: 16}}\r\n                layout=\"vertical\"\r\n                initialValues={\r\n                    {\r\n                        'name': profile.name,\r\n                        'email': profile.email,\r\n                        'username': profile.username,\r\n                        'phone': profile.phone,\r\n                        'website': profile.website,\r\n                        'city': profile.address.city,\r\n                        'street': profile.address.street,\r\n                        'suite': profile.address.suite,\r\n                        'zipcode': profile.address.zipcode,\r\n                        'companyname': profile.company.name,\r\n                        'catchPhrase': profile.company.catchPhrase,\r\n                        'bs': profile.company.bs,\r\n                    }\r\n                }\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}>\r\n                <Row>\r\n                    <Col xs={24} sm={24} md={24} lg={16}>\r\n                        <Row gutter={ROW_GUTTER}>\r\n                            <Col xs={24} sm={24} md={12}>\r\n                                <Form.Item label=\"Name\" name=\"name\" rules={getRules(\"Name\")}>\r\n                                    <Input/>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"E-mail\" name=\"email\" rules={getRules(\"E-mail\")}>\r\n                                    <Input/>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Website\" name=\"website\" rules={getRules(\"Website\")}>\r\n                                    <Input/>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Phone\" name=\"phone\" rules={getRules(\"Phone\")}>\r\n                                    <Input/>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Username\" name=\"username\" rules={getRules(\"Username\")}>\r\n                                    <Input/>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Company Name\" name=\"companyname\" rules={getRules(\"Company Name\")}>\r\n                                    <Input/>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Company CatchPhrase\" name=\"catchPhrase\"\r\n                                           rules={getRules(\"Company CatchPhrase\")}>\r\n                                    <Input/>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Company Bs\" name=\"bs\" rules={getRules(\"Company Bs\")}>\r\n                                    <Input/>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Item label=\"City\" name=\"city\" rules={getRules(\"City\")}>\r\n                                    <Input/>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Street\" name=\"street\" rules={getRules(\"Street\")}>\r\n                                    <Input/>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Suite\" name=\"suite\" rules={getRules(\"Suite\")}>\r\n                                    <Input/>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Zipcode\" name=\"zipcode\" rules={getRules(\"Zipcode\")}>\r\n                                    <Input/>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Save Change\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default EditProfile;"],"sourceRoot":""}